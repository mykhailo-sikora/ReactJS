import React from "react";
import {BrowserRouter, Route, Switch, NavLink} from "react-router-dom";
import logo from "./logo.svg";
import "./App.css";
import {Component} from "react";


class UserList extends Component {
    render() {
        console.log(this.props);
        const {usersFromJson} = this.props;

        return (
            <ul>
                {!usersFromJson.length ? (
                    <div>Loading</div>
                ) : (
                    usersFromJson.map(user => (
                        <li key={user.id}>
                            {" "}
                            <NavLink exact to={`/details/${user.id}`}>
                                Info about user: {user.name}
                            </NavLink>
                        </li>
                    ))
                )}
            </ul>
        );
    }
}

class Details extends Component {
    state = {
        posts: []
    };

    componentDidMount() {
        const {
            match: {
                params: {id}
            }
        } = this.props;

        fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)
            .then(response => response.json())
            .then(posts => this.setState({posts}));
    }

    componentDidUpdate(prevProps, prevState, snapshot) {
        const {
            match: {
                params: {id}
            }
        } = this.props;

        if (prevProps.match.params.id !== id) {
            fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)
                .then(response => response.json())
                .then(posts => this.setState({posts}));
        }
    }

    render() {
        return (
            <div>
                <h1 className='title'>Title posts:</h1>
                {this.state.posts.map(el => (

                    <div className='title' key={el.id}>{el.title}</div>
                ))}
            </div>
        );
    }
}

class App extends Component {
    state = {
        users: []
    };

    componentDidMount() {
        fetch("https://jsonplaceholder.typicode.com/users")
            .then(response => response.json())
            .then(users => {
                this.setState({users});
            });
    }

    render() {
        const {users} = this.state;

        return (
            <BrowserRouter>
                <UserList usersFromJson={users}/>
                <Switch>
                    <Route
                        exact
                        path="/details/"
                        render={() => <h1>Pick users to fetch data about him</h1>}
                    />
                    <Route
                        exact
                        path="/details/:id"
                        render={routerProps => <Details {...routerProps} />}
                    />
                </Switch>
            </BrowserRouter>
        );
    }
}

export default App;



