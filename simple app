<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Hello World</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <style type="text/css">
      .active {
        width: 100px;
        height: 100px;
        background-color: black;
      }
      .noactive {
        width: 100px;
        height: 100px;
        background-color: rgb(221, 30, 30);
      }
    </style>

    <div id="root"></div>
    <script type="text/babel">
      let isActive = false;

      const renderMyApp = () => {
        ReactDOM.render(
          isActive ? (
            <div className="active"></div>
          ) : (
            <div className="noactive"></div>
          ),
          document.getElementById("root")
        );
      };

      renderMyApp();

      document.addEventListener("click", () => {
        isActive = !isActive;
        renderMyApp();
      });
      
      
      --------------------------------JSX-----------------------------------
      
          <div id="root"></div>
    <script type="text/babel">
      ReactDOM.render(
        <h1 className="active">
          hello, <span>1</span> <span>2</span> <span>3</span>
        </h1>,
        document.getElementById("root")
      );

      setTimeout(() => {
        ReactDOM.render(
          <h1 className="active">
            hello, <span>1</span> <span>100</span> <span>3</span>
            {<div>YO</div>}                                                      // <-------------------MAGIC
          </h1>,
          document.getElementById("root")
        );
      }, 1000);

      window.a = (
        <h1 className="active">
          hello, <span>1</span> <span>100</span> <span>3</span>
        </h1>
      );
      
    </script>
  </body>
</html>
-----------------------------------------------------

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Hello React</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>

    <style type="text/css">
      .wrapper {
        text-align: center;
        border: 1px solid black;
        background-color: blanchedalmond;
        width: 400px;
        text-transform: uppercase;
      }

      .darkWrapper {
        text-align: center;
        border: 1px solid rgb(218, 18, 18);
        background-color: rgb(0, 0, 0);
        color: brown;
        width: 400px;
        text-transform: uppercase;
      }
      .fio {
        text-align: center;
        font-family: "Courier New", Courier, monospace;
        font-weight: bolder;
      }
      .forBtn {
        text-align: center;
      }
      .btn {
        text-transform: uppercase;
      }
    </style>
    <script type="text/babel">
      const { Fragment } = React;

      let imgTrue = true;

      let user = {
        name: "Ivan",
        surname: "Kolov",
        img:
          "https://icon-icons.com/icons2/2126/PNG/256/yoda_star_wars_icon_131348.png",
        img2:
          "https://icon-icons.com/icons2/2126/PNG/256/the_emperor_star_wars_icon_131346.png"
      };

      let image = true;

      const changerBtn = () => {
        image = !image;
        renderUI();
      };

      const DateUser = () => {
        const { name, surname, img, img2 } = user;
        return (
          <Fragment>
            <p className="fio">
              {name} {surname}
            </p>
            <div> {image ? <img src={img} /> : <img src={img2} />}</div>
          </Fragment>
        );
      };
      const RenderUser = () => {
        return (
          <Fragment>
            <div className={image ? "wrapper" : "darkWrapper"}>
              <DateUser />
              <div className="forBtn">
                <button className="btn" onClick={changerBtn}>
                  choose your destiny
                </button>
              </div>
            </div>
          </Fragment>
        );
      };

      const App = () => {
        return (
          <div>
            <RenderUser />
          </div>
        );
      };

      function renderUI() {
        ReactDOM.render(<App />, document.getElementById("root"));
      }

      renderUI();
    </script>
  </body>
</html>
